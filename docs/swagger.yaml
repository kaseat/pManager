basePath: /api
definitions:
  api.GmailAuthUrlSuccess:
    properties:
      url:
        example: https://google.com
        type: string
    type: object
  api.addOperationSuccess:
    properties:
      createdOperationId:
        example: 5edbc0a72c857652a0542fab
        type: string
    type: object
  api.addPortfoliioSuccess:
    properties:
      createdPortfolioId:
        example: 5edb2a0e550dfc5f16392838
        type: string
    type: object
  api.delMutileSuccess:
    properties:
      DeletedItems:
        example: 42
        type: integer
    type: object
  api.delPortfoliioSuccess:
    properties:
      hasDeleted:
        example: true
        type: boolean
    type: object
  api.errorResponse:
    properties:
      error:
        example: Something went wrong
        type: string
    type: object
  api.getAverageSuccess:
    properties:
      avg:
        example: 42
        type: number
    type: object
  api.getBalanceSuccess:
    properties:
      balance:
        example: 42
        type: number
    type: object
  api.operationRequest:
    properties:
      currency:
        example: USD
        type: string
      date:
        example: "2020-06-06T15:54:05Z"
        type: string
      figi:
        example: BBG00MVRXDB0
        type: string
      isin:
        example: US9229083632
        type: string
      price:
        example: 293.61
        type: number
      ticker:
        example: VOO
        type: string
      type:
        example: sell
        type: string
      vol:
        example: 100
        type: integer
    type: object
  api.portfolioRequest:
    properties:
      description:
        example: Best portfolio ever!!!
        type: string
      name:
        example: Best portfolio
        type: string
    type: object
  api.putPortfoliioSuccess:
    properties:
      hasModified:
        example: true
        type: boolean
    type: object
  api.tokenResponse:
    properties:
      status:
        type: string
      token:
        type: string
    type: object
  models.Operation:
    properties:
      currency:
        example: USD
        type: string
      date:
        example: "2020-06-06T15:54:05Z"
        type: string
      figi:
        example: BBG00MVRXDB0
        type: string
      id:
        example: 5edbc0a72c857652a0542fab
        type: string
      isin:
        example: US9229083632
        type: string
      pid:
        type: string
      price:
        example: 293.61
        type: number
      ticker:
        example: VOO
        type: string
      type:
        example: sell
        type: string
      vol:
        example: 100
        type: integer
    type: object
  models.Portfolio:
    properties:
      description:
        example: Best portfolio ever!!!
        type: string
      id:
        example: 5edb2a0e550dfc5f16392838
        type: string
      name:
        example: Best portfolio
        type: string
    type: object
host: localhost
info:
  contact: {}
  license:
    name: MIT
    url: https://github.com/kaseat/pManager/blob/master/LICENSE
  title: Portfolio manager API
  version: "1.0"
paths:
  /misc/gmail/url:
    get:
      description: Gets url for GMail auth
      operationId: get-gmail-url
      produces:
      - application/json
      responses:
        "200":
          description: Returns url for GMail auth
          schema:
            items:
              $ref: '#/definitions/api.GmailAuthUrlSuccess'
            type: array
        "400":
          description: Returns when any processing error occurs
          schema:
            $ref: '#/definitions/api.errorResponse'
        "401":
          description: Returns when authentication error occurs
          schema:
            $ref: '#/definitions/api.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get GMail auth url
      tags:
      - user
  /portfolios:
    delete:
      description: Deletes all portfolios an all associated operations
      operationId: portfolio-del-all
      produces:
      - application/json
      responses:
        "200":
          description: Returns true if portfolios has deleted
          schema:
            $ref: '#/definitions/api.delPortfoliioSuccess'
        "400":
          description: Returns when any processing error occurs
          schema:
            $ref: '#/definitions/api.errorResponse'
        "401":
          description: Returns when authentication error occurs
          schema:
            $ref: '#/definitions/api.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete all portfolios
      tags:
      - portfolios
    get:
      description: Gets all portfolios avaliable
      operationId: portfolio-get-all
      produces:
      - application/json
      responses:
        "200":
          description: Returns portfolio info
          schema:
            items:
              $ref: '#/definitions/models.Portfolio'
            type: array
        "400":
          description: Returns when any processing error occurs
          schema:
            $ref: '#/definitions/api.errorResponse'
        "401":
          description: Returns when authentication error occurs
          schema:
            $ref: '#/definitions/api.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all portfolios
      tags:
      - portfolios
    post:
      consumes:
      - application/json
      description: Creates single portfolio
      operationId: portfolio-add
      parameters:
      - description: Portfolio info
        in: body
        name: portfolio
        required: true
        schema:
          $ref: '#/definitions/api.portfolioRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Returns portfolio Id just created
          schema:
            $ref: '#/definitions/api.addPortfoliioSuccess'
        "400":
          description: Returns when any processing error occurs
          schema:
            $ref: '#/definitions/api.errorResponse'
        "401":
          description: Returns when authentication error occurs
          schema:
            $ref: '#/definitions/api.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Add new portfolio
      tags:
      - portfolios
  /portfolios/{id}:
    delete:
      description: Deletes portfolio an all associated operations
      operationId: portfolio-del-by-id
      parameters:
      - description: Portfolio Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Returns true if portfolio has deleted
          schema:
            $ref: '#/definitions/api.delPortfoliioSuccess'
        "400":
          description: Returns when any processing error occurs
          schema:
            $ref: '#/definitions/api.errorResponse'
        "401":
          description: Returns when authentication error occurs
          schema:
            $ref: '#/definitions/api.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete portfolio
      tags:
      - portfolios
    get:
      description: Gets portfolio info by Id
      operationId: portfolio-get-by-id
      parameters:
      - description: Portfolio Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Returns portfolio info if any
          schema:
            $ref: '#/definitions/models.Portfolio'
        "400":
          description: Returns when any processing error occurs
          schema:
            $ref: '#/definitions/api.errorResponse'
        "401":
          description: Returns when authentication error occurs
          schema:
            $ref: '#/definitions/api.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get portfolio by Id
      tags:
      - portfolios
    put:
      consumes:
      - application/json
      description: Updates portfolio info by Id
      operationId: portfolio-put-by-id
      parameters:
      - description: Portfolio Id
        in: path
        name: id
        required: true
        type: string
      - description: Portfolio info
        in: body
        name: portfolio
        required: true
        schema:
          $ref: '#/definitions/api.portfolioRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Returns portfolio info if any
          schema:
            $ref: '#/definitions/api.putPortfoliioSuccess'
        "400":
          description: Returns when any processing error occurs
          schema:
            $ref: '#/definitions/api.errorResponse'
        "401":
          description: Returns when authentication error occurs
          schema:
            $ref: '#/definitions/api.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update portfolio info
      tags:
      - portfolios
  /portfolios/{id}/average:
    get:
      description: Gets average price of given ticker
      operationId: get-average
      parameters:
      - description: Portfolio Id
        in: path
        name: id
        required: true
        type: string
      - description: Ticker
        in: query
        name: ticker
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Returns average price of given ticker
          schema:
            items:
              $ref: '#/definitions/api.getAverageSuccess'
            type: array
        "400":
          description: Returns when any processing error occurs
          schema:
            $ref: '#/definitions/api.errorResponse'
        "401":
          description: Returns when authentication error occurs
          schema:
            $ref: '#/definitions/api.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get average
      tags:
      - misc
  /portfolios/{id}/balance:
    get:
      description: Gets balance of given currency
      operationId: get-balance
      parameters:
      - description: Portfolio Id
        in: path
        name: id
        required: true
        type: string
      - description: Currency
        in: query
        name: currency
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Returns balance of given currency
          schema:
            items:
              $ref: '#/definitions/api.getBalanceSuccess'
            type: array
        "400":
          description: Returns when any processing error occurs
          schema:
            $ref: '#/definitions/api.errorResponse'
        "401":
          description: Returns when authentication error occurs
          schema:
            $ref: '#/definitions/api.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get balance
      tags:
      - misc
  /portfolios/{id}/operations:
    delete:
      description: Deletes all operations for given portfolio
      operationId: operation-del-all
      parameters:
      - description: Portfolio Id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Returns number of deleted items
          schema:
            items:
              $ref: '#/definitions/api.delMutileSuccess'
            type: array
        "400":
          description: Returns when any processing error occurs
          schema:
            $ref: '#/definitions/api.errorResponse'
        "401":
          description: Returns when authentication error occurs
          schema:
            $ref: '#/definitions/api.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete all operations
      tags:
      - operations
    get:
      description: Gets all operations for specified portfolio
      operationId: operation-get-all
      parameters:
      - description: Portfolio Id
        in: path
        name: id
        required: true
        type: string
      - description: Filter by FIGI
        in: query
        name: figi
        type: string
      - description: Filter operations from this date
        in: query
        name: from
        type: string
      - description: Filter operations till this date
        in: query
        name: to
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Returns operations info
          schema:
            items:
              $ref: '#/definitions/models.Operation'
            type: array
        "400":
          description: Returns when any processing error occurs
          schema:
            $ref: '#/definitions/api.errorResponse'
        "401":
          description: Returns when authentication error occurs
          schema:
            $ref: '#/definitions/api.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all operations
      tags:
      - operations
    post:
      consumes:
      - application/json
      description: Adds operation to specified portfolio
      operationId: operation-add
      parameters:
      - description: Portfolio Id
        in: path
        name: id
        required: true
        type: string
      - description: Operation info
        in: body
        name: portfolio
        required: true
        schema:
          $ref: '#/definitions/api.operationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Returns portfolio Id just created
          schema:
            $ref: '#/definitions/api.addOperationSuccess'
        "400":
          description: Returns when any processing error occurs
          schema:
            $ref: '#/definitions/api.errorResponse'
        "401":
          description: Returns when authentication error occurs
          schema:
            $ref: '#/definitions/api.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Add new operation
      tags:
      - operations
  /token/validate:
    get:
      description: get string by ID
      operationId: validate-token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.tokenResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Validate token
      tags:
      - security
  /user/login:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Checks user credentials and returns JWT if ok
      operationId: login
      parameters:
      - description: User name
        in: formData
        name: username
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.tokenResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.errorResponse'
      summary: Login
      tags:
      - user
  /user/signup:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Creates new user
      operationId: sign-up
      parameters:
      - description: User name
        in: formData
        name: username
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.tokenResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.errorResponse'
      summary: Create new user
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
